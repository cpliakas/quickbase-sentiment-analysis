AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An app that provides a sentiment analysis capability to Quickbase through Pipelines.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: quickbase-sentiment-analysis
    Description: An app that provides a sentiment analysis capability to Quickbase through Pipelines.
    Author: Chris Pliakas
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels:
      - quickbase
      - sentiment
      - comprehend
    HomePageUrl: https://github.com/cpliakas/quickbase-sentiment-analysis
    SemanticVersion: 0.1.0
    SourceCodeUrl: https://github.com/cpliakas/quickbase-sentiment-analysis

Parameters:

  Domain:
    Type: String
    AllowedPattern: ^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$
    Description: The Cognito User Pool domain, which is the prefix of the hostname used in the Pipelines Token URL setting.

Globals:
  Function:
    Timeout: 10

Resources:

  UserPoolPipelines:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true

  UserPoolDomainPipelines:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref Domain
      UserPoolId: !Ref UserPoolPipelines

  UserPoolResourceServerPipelines:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      Identifier: com.quickbase
      Name: Quickbase Pipelines
      Scopes:
        -
          ScopeName: pipelines
          ScopeDescription: Scope for resources that Quickbase Pipelines can access.
      UserPoolId: !Ref UserPoolPipelines

  UserPoolClientPipelines:
    Type: AWS::Cognito::UserPoolClient
    DependsOn: UserPoolResourceServerPipelines
    Properties:
      UserPoolId: !Ref UserPoolPipelines
      GenerateSecret: true
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthScopes:
        - com.quickbase/pipelines

  Api:
    Type: AWS::Serverless::Api
    DependsOn: UserPoolResourceServerPipelines
    Properties:
      StageName: Prod
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            AuthorizationScopes:
              - com.quickbase/pipelines
            UserPoolArn: !GetAtt UserPoolPipelines.Arn

  FunctionIndex:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function/
      Handler: index.handler
      Runtime: nodejs14.x
      Policies:
        - ComprehendBasicAccessPolicy: {}
      Events:
        DetectSentiment:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /
            Method: POST

  FunctionMetadata:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function/
      Handler: metadata.handler
      Runtime: nodejs14.x
      Policies:
        - Statement:
          - Sid: CognitoIdpAccess
            Effect: Allow
            Action:
            - cognito-idp:DescribeUserPoolClient
            Resource: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolPipelines}
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolPipelines
          USER_POOL_CLIENT_ID: !Ref UserPoolClientPipelines
          TOKEN_ENDPOINT: !Sub "https://${Domain}.auth.${AWS::Region}.amazoncognito.com/oauth2/token"
          API_ENDPOINT: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

Outputs:

  UserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref UserPoolPipelines

  UserPoolClientId:
    Description: "Cognito User Pool Client ID that defines the Client ID and Client Secret"
    Value: !Ref UserPoolClientPipelines

  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  TokenEndpoint:
    Description: "Cognito endpoint URL to get an access token"
    Value: !Sub "https://${Domain}.auth.${AWS::Region}.amazoncognito.com/oauth2/token"

  MetadataFunction:
    Description: "Name of the metadata function that returns Pipelines configuration"
    Value: !Ref FunctionMetadata
